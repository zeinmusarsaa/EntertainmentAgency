// <auto-generated />
using System;
using EntertainmentAgency.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntertainmentAgency.Migrations
{
    [DbContext(typeof(EntertainmentAgencyExampleContext))]
    [Migration("20240422182829_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("EntertainmentAgency.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AgentID");

                    b.Property<string>("AgtCity")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgtFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgtLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgtPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgtState")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgtStreetAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgtZipCode")
                        .HasColumnType("TEXT");

                    b.Property<double?>("CommissionRate")
                        .HasColumnType("NUMERIC");

                    b.Property<DateOnly?>("DateHired")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Salary")
                        .HasColumnType("NUMERIC");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("EntertainmentAgency.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CustomerID");

                    b.Property<string>("CustCity")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustState")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustStreetAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EntertainmentAgency.Models.Engagement", b =>
                {
                    b.Property<int>("EngagementNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AgentID");

                    b.Property<int?>("ContractPrice")
                        .HasColumnType("NUMERIC");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CustomerID");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EntertainerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EntertainerID");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("StopTime")
                        .HasColumnType("TEXT");

                    b.HasKey("EngagementNumber");

                    b.ToTable("Engagements");
                });

            modelBuilder.Entity("EntertainmentAgency.Models.Entertainer", b =>
                {
                    b.Property<int>("EntertainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("EntertainerID");

                    b.Property<DateOnly?>("DateEntered")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntCity")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntEmailAddress")
                        .HasColumnType("TEXT")
                        .HasColumnName("EntEMailAddress");

                    b.Property<string>("EntPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntSsn")
                        .HasColumnType("TEXT")
                        .HasColumnName("EntSSN");

                    b.Property<string>("EntStageName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntState")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntStreetAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntWebPage")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("EntertainerId");

                    b.ToTable("Entertainers");
                });

            modelBuilder.Entity("EntertainmentAgency.Models.EntertainerMember", b =>
                {
                    b.Property<int?>("EntertainerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EntertainerID");

                    b.Property<int?>("MemberId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MemberID");

                    b.Property<int?>("Status")
                        .HasColumnType("INTEGER");

                    b.ToTable("Entertainer_Members", (string)null);
                });

            modelBuilder.Entity("EntertainmentAgency.Models.EntertainerStyle", b =>
                {
                    b.Property<int?>("EntertainerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EntertainerID");

                    b.Property<int?>("StyleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StyleID");

                    b.Property<int?>("StyleStrength")
                        .HasColumnType("INTEGER");

                    b.ToTable("Entertainer_Styles", (string)null);
                });

            modelBuilder.Entity("EntertainmentAgency.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("MemberID");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("MbrFirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MbrLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MbrPhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("EntertainmentAgency.Models.MusicalPreference", b =>
                {
                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("PreferenceSeq")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StyleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StyleID");

                    b.ToTable("Musical_Preferences", (string)null);
                });

            modelBuilder.Entity("EntertainmentAgency.Models.MusicalStyle", b =>
                {
                    b.Property<int?>("StyleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StyleID");

                    b.Property<string>("StyleName")
                        .HasColumnType("TEXT");

                    b.ToTable("Musical_Styles", (string)null);
                });

            modelBuilder.Entity("EntertainmentAgency.Models.ZtblDay", b =>
                {
                    b.Property<DateOnly?>("DateField")
                        .HasColumnType("TEXT");

                    b.ToTable("ztblDays", (string)null);
                });

            modelBuilder.Entity("EntertainmentAgency.Models.ZtblMonth", b =>
                {
                    b.Property<int?>("April")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("August")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("December")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("February")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("January")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("July")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("June")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("March")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("May")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("MonthEnd")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MonthNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("MonthStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("MonthYear")
                        .HasColumnType("TEXT");

                    b.Property<int?>("November")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("October")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("September")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("YearNumber")
                        .HasColumnType("INTEGER");

                    b.ToTable("ztblMonths", (string)null);
                });

            modelBuilder.Entity("EntertainmentAgency.Models.ZtblSkipLabel", b =>
                {
                    b.Property<int?>("LabelCount")
                        .HasColumnType("INTEGER");

                    b.ToTable("ztblSkipLabels", (string)null);
                });

            modelBuilder.Entity("EntertainmentAgency.Models.ZtblWeek", b =>
                {
                    b.Property<DateOnly?>("WeekEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("WeekStart")
                        .HasColumnType("TEXT");

                    b.ToTable("ztblWeeks", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
